name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REPO_URL: https://github.com/${{ github.repository }}.git
      BRANCH: main
      REMOTE_DIR: telegram-absence-counter

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate required secrets
        run: |
          set -euo pipefail
          missing=0
          check() { if [ -z "$1" ]; then echo "Missing: $2"; missing=1; else echo "OK: $2"; fi; }

          check "${{ secrets.VM_HOST }}" VM_HOST
          check "${{ secrets.VM_USERNAME }}" VM_USERNAME
          check "${{ secrets.VM_PASSWORD }}" VM_PASSWORD
          check "${{ secrets.VM_PORT }}" VM_PORT

          check "${{ secrets.BOT_TOKEN }}" BOT_TOKEN
          check "${{ secrets.PG_DATABASE }}" PG_DATABASE
          check "${{ secrets.PG_USER }}" PG_USER
          check "${{ secrets.PG_PASSWORD }}" PG_PASSWORD
          check "${{ secrets.PG_PORT }}" PG_PORT

          if [ "$missing" -eq 1 ]; then
            echo "❌ Configure os secrets faltantes em Settings → Secrets and variables → Actions"; exit 1;
          fi

      - name: Prepare repo on server (clone/pull)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          password: ${{ secrets.VM_PASSWORD }}
          port: ${{ secrets.VM_PORT }}
          script: |
            set -e
            if [ ! -d "${{ env.REMOTE_DIR }}/.git" ]; then
              git clone --branch "${{ env.BRANCH }}" "${{ env.REPO_URL }}" "${{ env.REMOTE_DIR }}"
            else
              cd "${{ env.REMOTE_DIR }}"
              git fetch origin
              git checkout "${{ env.BRANCH }}"
              git reset --hard "origin/${{ env.BRANCH }}"
            fi

      - name: Write .env on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          password: ${{ secrets.VM_PASSWORD }}
          port: ${{ secrets.VM_PORT }}
          script: |
            set -e
            cd "${{ env.REMOTE_DIR }}"
            cat > .env <<'ENV'
            # --- telegram-absence-counter (.env gerado pelo GitHub Actions) ---
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}

            # Banco de Dados
            PG_HOST=postgres
            PG_DATABASE=${{ secrets.PG_DATABASE }}
            PG_USER=${{ secrets.PG_USER }}
            PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            PG_PORT=${{ secrets.PG_PORT }}
            ENV

      - name: Deploy with docker compose from cloned repo
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          password: ${{ secrets.VM_PASSWORD }}
          port: ${{ secrets.VM_PORT }}
          script: |
            set -e
            cd "${{ env.REMOTE_DIR }}"
            docker-compose up -d --build
